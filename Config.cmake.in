if(NOT ${CMAKE_FIND_PACKAGE_NAME}_FOUND)
   set(${CMAKE_FIND_PACKAGE_NAME}_VERSION @PROJECT_VERSION@ CACHE INTERNAL "${CMAKE_FIND_PACKAGE_NAME} version")

   @PACKAGE_INIT@

   include(CMakeFindDependencyMacro)

   function(maybe_message type message)
      if(NOT ${CMAKE_FIND_PACKAGE_NAME}_FIND_QUIETLY )
         message(${type} "${message}")
      endif()
   endfunction()

   set(_targets ${CMAKE_FIND_PACKAGE_NAME}::${CMAKE_FIND_PACKAGE_NAME})
   if("@WITH_OMPI@") # WITH_OMPI
      #maybe_message(STATUS "Finding dependencies MPI and OpenMP for ${CMAKE_FIND_PACKAGE_NAME}")

      # If C language is not enabled, the target MPI::MPI_C will not be created by
      # the find-module for MPI, same thing for Fortran.  Since they are dependencies
      # of ${CMAKE_FIND_PACKAGE_NAME}::${CMAKE_FIND_PACKAGE_NAME}-ompi but the user may be using just C or just Fortran, we need
      # to make sure both languages are enabled.
      #
      # If a user has already done find_package(MPI) then maybe we would need to do
      # some extra work to ensure the find-module is reexecuted.
      #
      # I wanted to put an 'enable_language(C Fortran)' here but ...
      # https://discourse.cmake.org/t/is-it-appropriate-to-use-enable-language-in-a-cmake-package-file/4335
      # Craig Scott (author of Professional CMake) says to check ENABLED_LANGUAGES
      # and to error out if C or Fortran is not enabled.  He doens't give reasons
      # but he says he's pretty sure there are some, he just doesn't remember them.

      #get_property(_enabled_languages GLOBAL PROPERTY ENABLED_LANGUAGES)
      #if(NOT C IN_LIST _enabled_languages)
      #    message(FATAL_ERROR "C lanugage must be enabled to use ${CMAKE_FIND_PACKAGE_NAME}-ompi")
      #endif()
      #if(NOT Fortran IN_LIST _enabled_languages)
      #    message(FATAL_ERROR "Fortran lanugage must be enabled to use ${CMAKE_FIND_PACKAGE_NAME}-ompi")
      #endif()
      #find_dependency(OpenMP REQUIRED)
      #find_dependency(MPI REQUIRED)
      set(_targets "${_targets}, ${CMAKE_FIND_PACKAGE_NAME}::${CMAKE_FIND_PACKAGE_NAME}-ompi")
   endif()

   include(${CMAKE_CURRENT_LIST_DIR}/${CMAKE_FIND_PACKAGE_NAME}-targets.cmake)

   maybe_message(STATUS "Found ${CMAKE_FIND_PACKAGE_NAME} ${${CMAKE_FIND_PACKAGE_NAME}_VERSION} in ${PACKAGE_PREFIX_DIR}")
   if(${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
      maybe_message(STATUS "Components ${${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS}")
   endif()
   maybe_message(STATUS "Imported targets: ${_targets} for static libraries")
   unset(_targets)
   unset(_enabled_languages)
endif()